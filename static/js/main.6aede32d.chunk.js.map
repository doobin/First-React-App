{"version":3,"sources":["GOTHousesData.js","Member.js","Family.js","App.js","serviceWorker.js","index.js"],"names":["gameOfThronesHouses","name","wikiSuffix","people","description","imageSuffix","Member","_ref","react_default","a","createElement","Family","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","liked","hidden","toggleLiked","bind","assertThisInitialized","toggleHidden","setState","_this$props","_this$state","className","onClick","map","member","src_Member","key","Component","App","house","src_Family_0","id","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6aede32d.chunk.js","sourcesContent":["const gameOfThronesHouses = [\n  {\n    name: 'Starks',\n    wikiSuffix: 'House_Stark',\n    people: [\n      {\n        name: 'Eddard \"Ned\" Stark',\n        description: 'Lord of Winterfell - Warden of the North - Hand of the King - Married to Catelyn (Tully) Stark',\n        imageSuffix: 'eddard-stark',\n        wikiSuffix: 'Eddard_Stark'\n      },\n      {\n        name: 'Benjen Stark',\n        description: 'Brother of Eddard Stark - First ranger of the Nights Watch',\n        imageSuffix: 'benjen-stark',\n        wikiSuffix: 'Benjen_Stark'\n      },\n      {\n        name: 'Robb Stark',\n        description: 'Son of Eddard and Catelyn Stark - Direwolf: Grey Wind',\n        imageSuffix: 'robb-stark',\n        wikiSuffix: 'Robb_Stark'\n      },\n      {\n        name: 'Sansa Stark',\n        description: 'Daughter of Eddard and Catelyn Stark - Direwolf: Lady',\n        imageSuffix: 'sansa-stark',\n        wikiSuffix: 'Sansa_Stark'\n      },\n      {\n        name: 'Arya Stark',\n        description: 'Daughter of Eddard and Catelyn Stark - Direwolf: Nymeria',\n        imageSuffix: 'arya-stark',\n        wikiSuffix: 'Arya_Stark'\n      },\n      {\n        name: 'Brandon \"Bran\" Stark',\n        description: 'Son of Eddard and Catelyn Stark - Direwolf: Summer',\n        imageSuffix: 'brandon-stark',\n        wikiSuffix: 'Brandon_Stark'\n      },\n      {\n        name: 'Rickon Stark',\n        description: 'Son of Eddard and Catelyn Stark - Direwolf: Shaggydog',\n        imageSuffix: 'rickon-stark',\n        wikiSuffix: 'Rickon_Stark'\n      },\n      {\n        name: 'Jon Snow',\n        description: 'Bastard son of Eddard Stark - Steweard in the Nights Watch - Direwolf: Ghost',\n        imageSuffix: 'jon-snow',\n        wikiSuffix: 'Jon_Snow'\n      }\n    ]\n  },\n  {\n    name: 'Lannisters',\n    wikiSuffix: 'House_Lannister',\n    people: [\n      {\n        name: 'Tywin Lannister',\n        description: 'Lord of Casterly Rock - Warden of the West',\n        imageSuffix: 'tywin-lannister',\n        wikiSuffix: 'Tywin_Lannister'\n      },\n      {\n        name: 'Tyrion Lannister',\n        description: 'Son of Tywin Lannister - The Imp',\n        imageSuffix: 'tyrion-lannister',\n        wikiSuffix: 'Tyrion_Lannister'\n      },\n      {\n        name: 'Jaime Lannister',\n        description: 'The Kingslayer - Knight of the Kingsgaurd - Son of Tywin Lannister',\n        imageSuffix: 'jaime-lannister',\n        wikiSuffix: 'Jaime_Lannister'\n      },\n      {\n        name: 'Queen Cersei (Lannister) Baratheon',\n        description: 'Married to King Robert Baratheon - Daughter of Tywin Lannister',\n        imageSuffix: 'cersei-lannister',\n        wikiSuffix: 'Cersei_Lannister'\n      }\n    ]\n  },\n  {\n    name: 'Baratheons',\n    wikiSuffix: 'House_Baratheon',\n    people: [\n      {\n        name: 'King Robert Baratheon',\n        description: 'The first of his name - Lord of the Seven Kingdoms',\n        imageSuffix: 'robert-baratheon',\n        wikiSuffix: 'Robert_Baratheon'\n      },\n      {\n        name: 'Stannis Baratheon',\n        description: 'Lord of Dragonstone - Master of Ships - Brother of Robert Baratheon',\n        imageSuffix: 'stannis-baratheon',\n        wikiSuffix: 'Stannis_Baratheon'\n      },\n      {\n        name: 'Renly Baratheon',\n        description: 'Lord of Storms End - Master of Laws - Brother of Robert Baratheon',\n        imageSuffix: 'renly-baratheon',\n        wikiSuffix: 'Renly_Baratheon'\n      },\n      {\n        name: 'Joffrey Baratheon',\n        description: 'Heir to the Iron Throne - Son of Robert and Cersei Baratheon',\n        imageSuffix: 'joffrey-baratheon',\n        wikiSuffix: 'Joffrey_Baratheon'\n      },\n      {\n        name: 'Tommen Baratheon',\n        description: 'Son of Robert and Cersei Baratheon',\n        imageSuffix: 'tommen-baratheon',\n        wikiSuffix: 'Tommen_Baratheon'\n      },\n      {\n        name: 'Myrcella Baratheon',\n        description: 'Daughter of Robert and Cersei Baratheon',\n        imageSuffix: 'myrcella-baratheon',\n        wikiSuffix: 'Myrcella_Baratheon'\n      }\n    ]\n  },\n  {\n    name: 'Targaryens',\n    wikiSuffix: 'House_Targaryen',\n    people: [\n      {\n        name: 'Daenerys Targaryen',\n        description: 'Stormborn - Khaleesi of the Dothraki - The Unburnt - Mother of Dragons - Daughter of Aerys II Targaryen \"The Mad King\"',\n        imageSuffix: 'daenerys-targaryen',\n        wikiSuffix: 'Daenerys_Targaryen'\n      },\n      {\n        name: 'Viserys Targaryen',\n        description: 'The Beggar King - Son of Aerys II Targaryen \"The Mad King\"',\n        imageSuffix: 'viserys-targaryen',\n        wikiSuffix: 'Viserys_Targaryen'\n      }\n    ]\n  },\n  {\n    name: 'Greyjoys',\n    wikiSuffix: 'House_Greyjoy',\n    people: [\n      {\n        name: 'Balon Greyjoy',\n        description: 'Lord Reaper of Pyke - Head of House Greyjoy',\n        imageSuffix: 'balon-greyjoy',\n        wikiSuffix: 'Balon_Greyjoy'\n      },\n      {\n        name: 'Theon Greyjoy',\n        description: 'Ward of the Starks - Heir to the Iron Islands - Son of Balon Greyjoy',\n        imageSuffix: 'theon-greyjoy',\n        wikiSuffix: 'Theon_Greyjoy'\n      },\n      {\n        name: 'Yara Greyjoy',\n        description: 'Ironborn - Son of Balon Greyjoy',\n        imageSuffix: 'yara-greyjoy',\n        wikiSuffix: 'Yara_Greyjoy'\n      }\n    ]\n  },\n  {\n    name: 'Tyrells',\n    wikiSuffix: 'House_Tyrell',\n    people: [\n      {\n        name: 'Margaery (Tyrell) Baratheon',\n        description: 'Wife of Renly Baratheon - Sister of Loras Tyrell - Granddaughter of Olenna Tyrell',\n        imageSuffix: 'margaery-tyrell',\n        wikiSuffix: 'Margaery_Tyrell'\n      },\n      {\n        name: 'Loras Tyrell',\n        description: 'Heir to Highgarden - Commander of the Kings Gaurd - Brother of Margaery Baratheon',\n        imageSuffix: 'loras-tyrell',\n        wikiSuffix: 'Loras_Tyrell'\n      }\n\n    ]\n  },\n  {\n    name: 'Tullys',\n    wikiSuffix: 'House_Tully',\n    people: [\n      {\n        name: 'Catelyn (Tully) Stark',\n        description: 'Married to Eddard Stark - Daughter of Hoster Tully',\n        imageSuffix: 'catelyn-tully',\n        wikiSuffix: 'Catelyn_Tully'\n      },\n      {\n        name: 'Lysa (Tully) Arryn',\n        description: 'Widow of Jon Arryn - Daughter of Hoster Tully',\n        imageSuffix: 'lysa-tully',\n        wikiSuffix: 'Lysa_Tully'\n      },\n      {\n        name: 'Edmure Tully',\n        description: 'Heir to Riverrun - Son of Hoster Tully',\n        imageSuffix: 'edmure-tully',\n        wikiSuffix: 'Edmure_Tully'\n      },\n      {\n        name: 'Brynden Tully',\n        description: 'Lord of Riverrun - Head of House Tully - Brother of Hoster Tully',\n        imageSuffix: 'brynden-tully',\n        wikiSuffix: 'Brynden_Tully'\n      }\n    ]\n  },\n  {\n    name: 'Redwyne',\n    wikiSuffix: 'House_Redwyne',\n    people: [\n      {\n        name: 'Olenna (Redwyne) Tyrell',\n        description: 'Matriarch of House Tyrell - Queen of Thorns',\n        imageSuffix: 'olenna-tyrell',\n        wikiSuffix: 'Olenna_Tyrell'\n      }\n    ]\n  },\n  {\n    name: 'Freys',\n    wikiSuffix: 'House_Freys',\n    people: [\n      {\n        name: 'Walder Frey',\n        description: 'Lord of the Crossing - Head of House Frey',\n        imageSuffix: 'walder-frey',\n        wikiSuffix: 'Walder_Frey'\n      }\n    ]\n  },\n  {\n    name: 'Arryns',\n    wikiSuffix: 'House_Arryns',\n    people: [\n      {\n        name: 'Jon Arryn',\n        description: 'Lord of the Eyrie - Head of House Arryn - Warden of the East - Defender of the Vale',\n        imageSuffix: 'jon-arryn',\n        wikiSuffix: 'Jon_Arryn'\n      }\n    ]\n  },\n  {\n    name: 'Dothrakis',\n    wikiSuffix: 'House_Dothrakis',\n    people: [\n      {\n        name: 'Khal Drogo',\n        description: 'Leader of the Dothraki people - Dothraki Warlord - Married to Daenerys Targaryen',\n        imageSuffix: 'khal-drogo',\n        wikiSuffix: 'Drogo'\n      }\n    ]\n  }\n]\n\nexport default gameOfThronesHouses\n","import React from 'react'\n\nconst Member = ({name}) => (\n  <li>{name}</li>\n)\n\nexport default Member\n","import React, { Component } from 'react'\nimport Member from './Member.js'\nimport './Family.scss'\n\nclass Family extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      liked: false,\n      hidden: false\n    }\n\n    // This binding is necessary to make `this` work in the callback\n    this.toggleLiked = this.toggleLiked.bind(this)\n    this.toggleHidden = this.toggleHidden.bind(this)\n  }\n\n  toggleLiked() {\n      this.setState({\n        liked: !this.state.liked\n      })\n    }\n\n  toggleHidden() {\n    this.setState({\n      hidden: !this.state.hidden\n    })\n  }\n\n  render () {\n    const { name, people } = this.props\n    const { liked, hidden } = this.state\n    return (\n      <div>\n        <h4 className={liked ? 'liked' : ''}> Family Name: {name}</h4>\n        <button onClick={this.toggleLiked}>{liked ? 'Unlike' : 'Like'}</button>\n        <p>Members: </p>\n        <button onClick={this.toggleHidden}>{hidden ? 'Show' : 'Hide'}</button>\n        <ul className={hidden ? 'hidden' : ''}>\n          {people.map(member => (\n            <Member\n              key={member.name}\n              name={member.name}\n            />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Family\n","import React from 'react';\nimport './App.css';\nimport gameOfThronesHouses from './GOTHousesData.js'\nimport Family from './Family.js'\n\n\nconst App = (props) => (\n  <div>\n    <h1>Game of Thrones</h1>\n    {gameOfThronesHouses.map(house => (\n      <Family\n        key={house.id}\n        name={house.name}\n        people={house.people}\n      />\n    ))}\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}